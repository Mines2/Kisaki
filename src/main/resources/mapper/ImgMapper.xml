<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kisaki.web.mapper.ImgMapper">
    <resultMap id="ImgResult" type="kisaki.web.entity.Img">
        <result column="ID" property="id"/>
        <result column="IMG_URL" property="imgUrl"/>
        <result column="IMG_NAME" property="imgName"/>
        <result column="USER_ID" property="userId"/>
        <result column="USER_NAME" property="userName"/>
        <result column="USER_LOGO_URL" property="userLogoUrl"/>
        <result column="USER_SIZE" property="userSize"/>
        <result column="IMG_HAVE_SEEN" property="imgHaveSeen"></result>
        <result column="IMG_HAVE_COLLECTED" property="ImgHaveCollected"/>
        <result column="PUSH_DATE" property="imgPushDate"/>
    </resultMap>


    <sql id="base_column">
        ID, IMG_URL,IMG_NAME ,PUSH_DATE
    </sql>

    <select id="getList" resultMap="ImgResult">
        SELECT
        <include refid="base_column"></include>
        , BG.USER_ID,TU.USER_NAME ,TU.USER_LOGO_URL
        FROM
        backgroundImg BG
        LEFT JOIN T_USER TU ON BG.USER_ID = TU.USER_ID
        ORDER BY ID ASC

    </select>

    <select id="getImgListByType" resultMap="ImgResult" parameterType="java.util.Map" statementType="STATEMENT">
        <![CDATA[

        SELECT
        id , img_name ,img_context , img_have_seen , img_have_collected ,img_url
        ,push_date,img_size,tu.USER_ID as user_id, USER_NAME , USER_LOGO_URL

        FROM T_IMG TI LEFT JOIN  T_USER tu on tu.USER_ID = TI.user_id

        order BY  ${type} ASC

        LIMIT 3


        ]]>
    </select>

    <select id="getImgListByTypes" resultMap="ImgResult" parameterType="java.util.Map" >
         SELECT
        id , img_name ,img_context , img_have_seen , img_have_collected ,img_url
        ,push_date,img_size,tu.USER_ID as user_id, USER_NAME , USER_LOGO_URL

        FROM T_IMG TI LEFT JOIN  T_USER tu on tu.USER_ID = TI.user_id


    </select>

    <insert id="addCollect" parameterType="java.util.Map">
        INSERT  T_COLLECT_IMG (user_id,img_id,img_user_id)
        VALUES (#{userId,jdbcType=NUMERIC} , #{imgId,jdbcType=NUMERIC},
        #{imgUserId,jdbcType=NUMERIC})
    </insert>

    <select id="showByImgId" parameterType="java.lang.Long"  resultMap="ImgResult">
        SELECT
        id , img_name ,img_context , img_have_seen , img_have_collected ,img_url
        ,push_date,img_size,tu.USER_ID as user_id, USER_NAME , USER_LOGO_URL,
        img_have_seen , img_have_collected
        FROM  T_IMG TI
        LEFT JOIN T_USER TU on TU.USER_ID = TI.USER_ID

        where id = #{imgId , jdbcType=NUMERIC }
    </select>

    <select id="findImgByUserId" parameterType="java.lang.Long" resultMap="ImgResult">
         SELECT
        id , img_name ,img_context , img_have_seen , img_have_collected ,img_url
        ,push_date,img_size,tu.USER_ID as user_id, USER_NAME , USER_LOGO_URL
        FROM  T_IMG TI
        LEFT JOIN T_USER TU on TU.USER_ID = TI.USER_ID

        where tu.USER_ID = #{userId , jdbcType=NUMERIC }
    </select>


    <select id="getCareImgListByUserId" resultMap="ImgResult" parameterType="java.lang.Long" >


        SELECT
        id , img_name ,img_context , img_have_seen , img_have_collected ,img_url
        ,push_date,img_size,tuc.USER_ID as user_id, care_id
        FROM T_IMG TI LEFT JOIN  T_USER_CARE tuc on tuc.USER_ID = TI.user_id
       <where>
           1 = 1
           <if test="null != userId and '' != userId">
               ti.user_ID = #{userId ,jdbcType=NUMERIC }
           </if>
       </where>

        LIMIT 6



    </select>

    <insert id="haveSeen" parameterType="java.util.Map" >
        INSERT INTO  T_SEEN_IMG (user_id,img_id) VALUES (#{userId,jdbcType=NUMERIC} , #{imgId,jdbcType=NUMERIC})
    </insert>


    <insert id="upLoad" parameterType="java.util.Map">
        INSERT t_img (user_id,img_name,img_context,img_url,push_date,img_size)
        VALUES
        <foreach collection="list" item="item" separator=",">
            (#{item.userId},#{item.imgName},#{item.imgContext},#{item.imgUrl},#{item.imgPushDate},#{item.img_size})
        </foreach>

    </insert>

</mapper>